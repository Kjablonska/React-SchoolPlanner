[{"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js":"1","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js":"2","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js":"3","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js":"4","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js":"5"},{"size":500,"mtime":1609855152135,"results":"6","hashOfConfig":"7"},{"size":540,"mtime":1610318420353,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609855152135,"results":"9","hashOfConfig":"7"},{"size":3724,"mtime":1610326317742,"results":"10","hashOfConfig":"7"},{"size":2480,"mtime":1610327442431,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ojiics",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js",[],["24","25"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js",["26","27"],"ï»¿import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { Link  } from \"react-router-dom\";\nimport { Table } from 'reactstrap';\n\nvar columnsHeaders = [\n    \"#\"\n    ,\"Monday\"\n    ,\"Tuesday\"\n    ,\"Wednesday\"\n    ,\"Thursday\"\n    ,\"Friday\"\n  ];\n\n  var rowsHeaders = [\n    \"8:00-8:45\"\n    ,\"8:55-9:40\"\n    ,\"9:50-11:35\"\n    ,\"11:55-12:40\"\n    ,\"12:50-13:35\"\n    ,\"13:45-14:30\"\n    ,\"14:40-15:25\"\n    ,\"15:35-16:20\"\n    ,\"16:30-17:15\"\n  ];\n// This component is created as a class because there is a need to remeber the selected room, as a state.\n\nclass TimeTable extends React.Component {\n    constructor() {\n      super();\n\n      this.state = {\n        selectedRoom: '',\n        roomsList: [],\n        activities: []\n      };\n\n    }\n\n    async componentDidMount() {\n\n      await this.getRoomOptions();\n\n      if (this.state.roomsList.length > 0 && this.state.selectedRoom !== ' ') {\n        this.state.selectedRoom = this.state.roomsList[0];\n      }\n\n      await this.getRoomActivities();\n    }\n\n    componentWillUnmount() {\n      this.setState = (state,callback)=>{\n        return;\n      };\n    }\n\n    async getRoomOptions() {\n      return await fetch(`/dictionaryList?dictionary=rooms`)\n      .then(response => response.json())\n      .then(data => this.setState({roomsList: data}))\n    }\n\n    async getRoomActivities() {\n      return await fetch(`/activities?room=${this.state.selectedRoom}`)\n      .then(response => response.json())\n      .then(data => this.setState({activities: data}))\n    }\n\n    generateRoomSelection = () => {\n      return (\n      <select name=\"select-room\" value={this.state.selectedRoom} onChange={e => this.changeRoom(e.target.value)} >\n        {(this.state.roomsList).map(r => <option key={r} value={r}>{r}</option>)}\n      </select>\n      )\n    }\n\n    changeRoom(newRoom) {\n      this.setState({\n        selectedRoom: newRoom\n      })\n      this.getRoomActivities();\n    }\n\n    generateColumns() {\n      let columns = [];\n      columnsHeaders.forEach(item => {\n        columns.push(\n          <th>\n            {item}\n          </th>\n        )\n      })\n\n      return columns;\n    }\n\n    goToActivityDetails(row, col) {\n      let room = this.state.selectedRoom;\n      return { pathname: \"activityDetail\", state: {room, row, col}}\n    }\n\n    generateTableData() {\n\n      let rows = [];\n      for (const row of rowsHeaders) {\n        let columns = [];\n        for (const col of columnsHeaders) {\n          var data;\n          if (col === '#') {\n            data = row;\n            columns.push (\n              <td className=\"col\">\n                  {data}\n              </td>\n            );\n          } else {\n            data = \"X\"\n            for(const [key, value] of Object.entries(this.state.activities)) {\n              if (value[\"slot\"] === row && value[\"day\"] === col) {\n                data = value[\"group\"];\n              }\n            }\n\n            columns.push (\n              <td key className=\"col\">\n                  <Link to= {this.goToActivityDetails(row, col)} className=\"btn btn-primary\">\n                    <button>{data}</button>\n                  </Link>\n              </td>\n            );\n          }\n        }\n        rows.push (\n          <tr key={row} className=\"row\">\n              {columns}\n          </tr>\n        );\n      }\n\n      return rows;\n    }\n\n    render() {\n      return (\n        <div id = 'root'>\n        <label>Room</label>\n          {this.generateRoomSelection()}\n          <h3 id='title'>SchoolData</h3>\n            <Table striped>\n              <tbody>\n                {this.generateColumns()}\n                {this.generateTableData()}\n              </tbody>\n            </Table>\n        </div>\n      );\n    }\n\n}\n\n\nexport default TimeTable;","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js",["28","29","30","31","32","33","34","35","36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":1,"nodeType":"44","messageId":"45","fix":"46"},{"ruleId":"47","severity":1,"message":"48","line":118,"column":24,"nodeType":"49","messageId":"50","endLine":118,"endColumn":27},{"ruleId":"47","severity":1,"message":"51","line":4,"column":12,"nodeType":"49","messageId":"50","endLine":4,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":5,"column":12,"nodeType":"49","messageId":"50","endLine":5,"endColumn":19},{"ruleId":"47","severity":1,"message":"53","line":5,"column":21,"nodeType":"49","messageId":"50","endLine":5,"endColumn":31},{"ruleId":"47","severity":1,"message":"54","line":6,"column":12,"nodeType":"49","messageId":"50","endLine":6,"endColumn":20},{"ruleId":"47","severity":1,"message":"55","line":6,"column":22,"nodeType":"49","messageId":"50","endLine":6,"endColumn":33},{"ruleId":"56","severity":1,"message":"57","line":9,"column":21,"nodeType":"58","endLine":15,"endColumn":8},{"ruleId":"47","severity":1,"message":"59","line":19,"column":20,"nodeType":"49","messageId":"50","endLine":19,"endColumn":36},{"ruleId":"47","severity":1,"message":"60","line":24,"column":20,"nodeType":"49","messageId":"50","endLine":24,"endColumn":37},{"ruleId":"47","severity":1,"message":"61","line":29,"column":20,"nodeType":"49","messageId":"50","endLine":29,"endColumn":38},{"ruleId":"47","severity":1,"message":"62","line":34,"column":20,"nodeType":"49","messageId":"50","endLine":34,"endColumn":38},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"65","text":"66"},"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","'g' is assigned a value but never used.","'classes' is assigned a value but never used.","'setClasses' is assigned a value but never used.","'teachers' is assigned a value but never used.","'setTeachers' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'getGroupsOptions' is defined but never used.","'getClassesOptions' is defined but never used.","'getTeachersOptions' is defined but never used.","'getActivityDetails' is defined but never used.","no-global-assign","no-unsafe-negation",[-1,0],""]