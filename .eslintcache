[{"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js":"1","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js":"2","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js":"3","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js":"4","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js":"5","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/MenuComponent.js":"6","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditDictionaryComponent.js":"7","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/Layout.js":"8","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditEntryComponent.js":"9"},{"size":500,"mtime":1609855152135,"results":"10","hashOfConfig":"11"},{"size":935,"mtime":1610724279858,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609855152135,"results":"13","hashOfConfig":"11"},{"size":3249,"mtime":1610819324043,"results":"14","hashOfConfig":"11"},{"size":3630,"mtime":1610648646720,"results":"15","hashOfConfig":"11"},{"size":1102,"mtime":1610808430079,"results":"16","hashOfConfig":"11"},{"size":2380,"mtime":1610813528859,"results":"17","hashOfConfig":"11"},{"size":241,"mtime":1610636564672,"results":"18","hashOfConfig":"11"},{"size":1601,"mtime":1610815843447,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ojiics",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js",[],["41","42"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js",["43","44"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js",["45"],"import React from 'react';\nimport { Link  } from \"react-router-dom\";\n\nfunction Activity(props) {\n    const [groupsList, setGroups] = React.useState([]);\n    const [classesList, setClasses] = React.useState([]);\n    const [teachersList, setTeachers] = React.useState([]);\n    const [activity, setActivity] = React.useState(\"\");\n\n    React.useEffect(() => {\n        async function fetchGroupsList() {\n            let response = await fetch(`/dictionaryList?dictionary=groups`)\n            response = await response.json()\n            setGroups(response)\n        }\n\n        async function fetchClassesList() {\n            let response = await fetch(`/dictionaryList?dictionary=classes`)\n            response = await response.json()\n            setClasses(response)\n        }\n\n        async function fetchTeachersList() {\n            let response = await fetch(`/dictionaryList?dictionary=teachers`)\n            response = await response.json()\n            setTeachers(response)\n        }\n\n        async function fetchActivityDetail() {\n            await fetch(`/activityDetail?room=${props.location.state.room}&slot=${props.location.state.row}&day=${props.location.state.col}`)\n            .then(response => response.json()).then(response => setActivity(response)).catch(error => {console.log(error)});\n        }\n\n        fetchGroupsList();\n        fetchClassesList();\n        fetchTeachersList();\n        fetchActivityDetail();\n    }, [])\n\n    const goToTimeTable = () => {\n        let room = props.location.state.room;\n        console.log(\"det\", {room});\n        return { pathname: \"/\", state: {room}}\n    }\n\n    return (\n        <div>\n            {props.location.state.room}\n        <form>\n        <table>\n            <tr>\n                <td>Room</td>\n                <td>\n                    <input name=\"room\" value = {props.location.state.room} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Slot</td>\n                <td>\n                    <input name=\"slot\" value = {props.location.state.row} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Day</td>\n                <td>\n                    <input name=\"day\" value = {props.location.state.col} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Group</td>\n                <td>\n                    <select name=\"group\" value={activity.group}>\n                        {groupsList.map(r => <option key={r} value={r}>{r}</option>)}\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>Class</td>\n                <td>\n                    <select name=\"class\" value={activity.class}>\n                        {classesList.map(r => <option key={r} value={r}>{r}</option>)}\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>Teacher</td>\n                <td>\n                    <select name=\"teacher\"value={activity.teacher}>\n                        {teachersList.map(r => <option key={r} value={r}>{r}</option>)}\n                    </select>\n                </td>\n            </tr>\n        </table>\n        <input type=\"submit\"></input>\n        </form>\n        <div>\n            <Link to = {goToTimeTable()} className=\"btn btn-primary\">\n                <button>Cancel</button>\n            </Link>\n            {activity !== \"\" &&\n                <Link to = {goToTimeTable()} className=\"btn btn-primary\">\n                    <button>Unassign</button>\n                </Link>\n            }\n        </div>\n        </div>\n    )\n}\n\nexport default Activity;","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/MenuComponent.js",["46"],"import React, { Component } from 'react';\nimport { Link  } from \"react-router-dom\";\nimport { NavItem, NavLink } from 'reactstrap';\n\nfunction Menu(props) {\n\n    return (\n        <div>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-white\" to='/'>TimeTable</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-white\" to={{pathname:'/editDictionary', state: {dictionary:'classes'}}}>Classes</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-white\" to={{pathname:'/editDictionary', state: {dictionary:'groups'}}}>Groups</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-white\" to={{pathname:'/editDictionary', state: {dictionary:'teachers'}}}>Teachers</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-white\" to={{pathname:'/editDictionary', state: {dictionary:'rooms'}}}>Rooms</NavLink>\n            </NavItem>\n        </div>\n    )\n}\n\nexport default Menu;","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditDictionaryComponent.js",["47","48","49"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/Layout.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditEntryComponent.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":1,"nodeType":"56","messageId":"57","fix":"58"},{"ruleId":"59","severity":1,"message":"60","line":97,"column":24,"nodeType":"61","messageId":"62","endLine":97,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":38,"column":8,"nodeType":"65","endLine":38,"endColumn":10,"suggestions":"66"},{"ruleId":"59","severity":1,"message":"67","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"68","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"63","severity":1,"message":"69","line":16,"column":8,"nodeType":"65","endLine":16,"endColumn":15,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"69","line":20,"column":8,"nodeType":"65","endLine":20,"endColumn":20,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"74","text":"75"},"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.location.state.col', 'props.location.state.room', and 'props.location.state.row'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'Component' is defined but never used.","'EditEntry' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.",["77"],["78"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [props.location.state.col, props.location.state.room, props.location.state.row]",{"range":"85","text":"86"},"Update the dependencies array to be: [getDict, props]",{"range":"87","text":"88"},"Update the dependencies array to be: [dictionary, getDict]",{"range":"89","text":"90"},[1433,1435],"[props.location.state.col, props.location.state.room, props.location.state.row]",[523,530],"[getDict, props]",[587,599],"[dictionary, getDict]"]