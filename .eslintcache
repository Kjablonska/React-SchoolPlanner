[{"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js":"1","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js":"2","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js":"3","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js":"4","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js":"5","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/MenuComponent.js":"6","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditDictionaryComponent.js":"7","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/Layout.js":"8","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditEntryComponent.js":"9"},{"size":500,"mtime":1609855152135,"results":"10","hashOfConfig":"11"},{"size":935,"mtime":1610724279858,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609855152135,"results":"13","hashOfConfig":"11"},{"size":3719,"mtime":1610833321431,"results":"14","hashOfConfig":"11"},{"size":6163,"mtime":1610833251195,"results":"15","hashOfConfig":"11"},{"size":1087,"mtime":1610833086455,"results":"16","hashOfConfig":"11"},{"size":2349,"mtime":1610832990759,"results":"17","hashOfConfig":"11"},{"size":241,"mtime":1610636564672,"results":"18","hashOfConfig":"11"},{"size":2422,"mtime":1610831735464,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ojiics",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/index.js",[],["41","42"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/App.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/reportWebVitals.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/TimeTableComponent.js",["43","44","45"],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/ActivityDetailComponent.js",["46"],"import React from 'react';\nimport { Link  } from \"react-router-dom\";\n\nfunction Activity(props) {\n    const [groupsList, setGroups] = React.useState([]);\n    const [classesList, setClasses] = React.useState([]);\n    const [teachersList, setTeachers] = React.useState([]);\n    const [activity, setActivity] = React.useState([]);\n\n    const [group, setGroup] = React.useState(\"\");\n    const [clas, setClass] = React.useState(\"\");\n    const [teacher, setTeacher] = React.useState(\"\");\n\n\n    React.useEffect(() => {\n        async function fetchGroupsList() {\n            let response = await fetch(`/dictionaryList?dictionary=groups`)\n            response = await response.json()\n            setGroups(response)\n        }\n\n        async function fetchClassesList() {\n            let response = await fetch(`/dictionaryList?dictionary=classes`)\n            response = await response.json()\n            setClasses(response)\n        }\n\n        async function fetchTeachersList() {\n            let response = await fetch(`/dictionaryList?dictionary=teachers`)\n            response = await response.json()\n            setTeachers(response)\n        }\n\n        async function fetchActivityDetail() {\n            await fetch(`/activityDetail?room=${props.location.state.room}&slot=${props.location.state.slot}&day=${props.location.state.day}`)\n            .then(response => response.json()).then(response => setActivity(response)).catch(error => {console.log(error)});\n        }\n\n        fetchGroupsList();\n        fetchClassesList();\n        fetchTeachersList();\n        fetchActivityDetail();\n    }, )\n\n    React.useEffect( () => {\n        function setDefault() {\n            console.log(activity)\n            if (activity !== undefined && activity.length !== 0) {\n                setGroup(activity.group);\n                setClass(activity.class);\n                setTeacher(activity.teacher);\n            } else {\n                setGroup(groupsList[0]);\n                setClass(classesList[0])\n                setTeacher(teachersList[0]);\n            }\n        }\n\n        setDefault();\n    }, [activity])\n\n\n    const goToTimeTable = () => {\n        let room = props.location.state.room;\n        return { pathname: \"/\", state: {room}}\n    }\n\n    const unassign = async() => {\n        await fetch(`/unassignEntry`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(\n                {   room: `${props.location.state.room}`,\n                    day: `${props.location.state.day}`,\n                    slot: `${props.location.state.slot}`\n                }\n            )\n        })\n        console.log(\"unassigned\")\n    }\n\n    const saveEntry = async function(event) {\n        event.preventDefault();\n        var group = document.getElementById(\"group\").value;\n        var clas = document.getElementById(\"class\").value;\n        var teacher = document.getElementById(\"teacher\").value;\n        console.log(\"data\", group, clas, teacher)\n        console.log(\"save push\", group, clas, teacher)\n\n        await fetch(`/saveActivity`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(\n                {   room: `${props.location.state.room}`,\n                    slot: `${props.location.state.slot}`,\n                    day:`${props.location.state.day}`,\n                    group: `${group}`,\n                    class: `${clas}`,\n                    teacher: `${teacher}`\n                })\n        }).then(() => {\n            props.history.push({pathname: \"/\", state: {room:props.location.state.room}});\n        });\n    }\n\n    return (\n        <div>\n            {props.location.state.room}\n        <form onSubmit={saveEntry}>\n        <table>\n            <tr>\n                <td>Room</td>\n                <td>\n                    <input name=\"room\" value = {props.location.state.room} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Slot</td>\n                <td>\n                    <input name=\"slot\" value = {props.location.state.slot} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Day</td>\n                <td>\n                    <input name=\"day\" value = {props.location.state.day} readOnly/>\n                </td>\n            </tr>\n            <tr>\n                <td>Group</td>\n                <td>\n                    <select name=\"group\" id=\"group\" value={group} onChange={e => setGroup(e.target.value)}>\n                        {groupsList.map(r =>\n                            <option defaultValue={r}>{r}</option>\n                        )}\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>Class</td>\n                <td>\n                    <select name=\"class\" id=\"class\" value={clas} onChange={e => setClass(e.target.value)}>\n                        {classesList.map(r =>\n                            <option>{r}</option>\n                        )}\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td>Teacher</td>\n                <td>\n                    <select name=\"teacher\" id=\"teacher\" value={teacher} onChange={e => setTeacher(e.target.value)}>\n                        {teachersList.map(r =>\n                            <option>{r}</option>\n                        )}\n                    </select>\n                </td>\n            </tr>\n        </table>\n        <button type=\"submit\">Save</button>\n        </form>\n        <div>\n            <Link to = {goToTimeTable} className=\"btn btn-primary\">\n                <button>Cancel</button>\n            </Link>\n            {(activity !== undefined && activity.length !== 0) &&\n                <Link to = {goToTimeTable} className=\"btn btn-primary\">\n                    <button onClick = {unassign}>Unassign</button>\n                </Link>\n            }\n        </div>\n        </div>\n    )\n}\n\nexport default Activity;","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/MenuComponent.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditDictionaryComponent.js",["47","48"],"import React from 'react';\nimport { Link  } from \"react-router-dom\";\n\nfunction EditDictionary(props) {\n    const [dictionaryList, setDictionaryList] = React.useState([]);\n    const [dictionary, setDictionary] = React.useState(\"\");\n\n    React.useEffect(() => {\n        console.log(props)\n        if (props.location['state'] !== undefined && props.location.state['dictionary'] !== undefined)\n            setDictionary(props.location.state.dictionary)\n\n        getDict();\n    }, [props])\n\n    React.useEffect(() => {\n        getDict();\n    }, [dictionary])\n\n    const getDict = async function() {\n        console.log(\"getting list\");\n        let response = await fetch(`/dictionaryList?dictionary=${dictionary}`)\n        response = await response.json()\n        setDictionaryList(response)\n    }\n\n    const removeEntry = async function(entry, dict) {\n        await fetch(`/removeDictionaryEntry`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ dictionary: `${dict}`, entry: `${entry}`})\n        })\n        getDict()\n    }\n\n    const goToEditEntry = (entry) => {\n        return { pathname: \"editEntry\", state: {entry, dictionary}}\n    }\n\n    return (\n    <div>\n\n    <div>Dictionary: {dictionary}\n        <table>\n        <tbody>\n            {dictionaryList.map(r =>\n                <tr>\n                    <td key={r}>\n                        <input className=\"input-data\" type=\"text\" key={r} value={r} readOnly></input>\n                    </td>\n                    <td>\n                        <div>\n                            <button key=\"remove\" onClick={() => removeEntry(r, dictionary)}>Remove</button>\n                        </div>\n                    </td>\n                    <td>\n                        <div>\n                            <Link to = {goToEditEntry(r)} className=\"btn btn-primary\">\n                            <button key=\"edit\">Edit</button>\n                            </Link>\n                        </div>\n                    </td>\n                </tr>)}\n        </tbody>\n        </table>\n        <Link to = {goToEditEntry('')} className=\"btn btn-primary\">\n            <button>Add</button>\n        </Link>\n    </div>\n    </div>\n    )\n}\n\nexport default EditDictionary;","/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/Layout.js",[],"/home/kj/projects/elka/EGUI/lab3_React/school-planner/src/Components/EditEntryComponent.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":1,"nodeType":"55","messageId":"56","fix":"57"},{"ruleId":"58","severity":1,"message":"59","line":34,"column":8,"nodeType":"60","endLine":34,"endColumn":19,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"59","line":61,"column":8,"nodeType":"60","endLine":61,"endColumn":15,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"63","line":60,"column":8,"nodeType":"60","endLine":60,"endColumn":18,"suggestions":"64"},{"ruleId":"58","severity":1,"message":"65","line":14,"column":8,"nodeType":"60","endLine":14,"endColumn":15,"suggestions":"66"},{"ruleId":"58","severity":1,"message":"65","line":18,"column":8,"nodeType":"60","endLine":18,"endColumn":20,"suggestions":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"70","text":"71"},"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'selectedRoom'. Either include it or remove the dependency array.","ArrayExpression",["72"],["73"],"React Hook React.useEffect has missing dependencies: 'classesList', 'groupsList', and 'teachersList'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setGroup' needs the current value of 'groupsList'.",["74"],"React Hook React.useEffect has a missing dependency: 'getDict'. Either include it or remove the dependency array.",["75"],["76"],"no-global-assign","no-unsafe-negation",[-1,0],"",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [roomsList, selectedRoom]",{"range":"87","text":"88"},"Update the dependencies array to be: [props, selectedRoom]",{"range":"89","text":"90"},"Update the dependencies array to be: [activity, classesList, groupsList, teachersList]",{"range":"91","text":"92"},"Update the dependencies array to be: [getDict, props]",{"range":"93","text":"94"},"Update the dependencies array to be: [dictionary, getDict]",{"range":"95","text":"96"},[750,761],"[roomsList, selectedRoom]",[1645,1652],"[props, selectedRoom]",[2086,2096],"[activity, classesList, groupsList, teachersList]",[476,483],"[getDict, props]",[540,552],"[dictionary, getDict]"]